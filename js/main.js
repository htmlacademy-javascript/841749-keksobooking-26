/**
 * Нужно несколько вспомогательных функции (Функции могут взяты из интернета)
 *
 * 1. Функция, возвращающая случайное целое число из переданного диапазона включительно. Пример использования функции:
 *   1) имя_функции(от, до); // Результат: целое число из диапазона "от...до"
 *       1)Учтите, что диапазон может быть только положительный, включая ноль. А также придумайте, как функция должна вести себя, если передать значение «до» меньшее, чем значение «от», или равное ему.
 *       2)Функция может не гарантировать верный результат, если в переданном диапазоне нет ни одного подходящего числа.
 */

/**
 * Функция по получению случайного целого числа в заданном интервале, включительно
 * https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/random - ссылка на ресурс функции
 * @method Math.random() - метод возвращения случайного числа
 * @method Math.ceil(min) - метод округления аргумента до ближайшего большего целого. Пример:(Math.ceil(.95);    // 1)
 * @method Math.floor(max) - метод округляния аргумента до ближайшего меньшего целого. Пример:(Math.floor( 45.95); //  45)
 * @param {number} min - минимальное число
 * @param {number} max - максимальное число
 * @returns {number} - возращает случайно целое число в заданном интервале
 * @returns {string} - описание: диапозон не может быть отрицательным
 */

const getRandomIntInclusive = (min, max) => {
  if (min >= 0 && max >= 0) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются
  }

  return('диапазон может быть только положительный, включая ноль.');
};

// аргументы, которые передаются в функции при вызове
getRandomIntInclusive(3, 10);

/**
 * Функция с тернарным оператором
const getRandomIntInclusive = (min, max) => {
  min = Math.ceil(min);
  max = Math.floor(max);
return (min >= 0 && max >= 0) ? Math.floor(Math.random() * (max - min + 1)) + min : ('диапазон может быть только положительный, включая ноль.');
}

getRandomIntInclusive(3, 10);
*/


/**
 * Нужно несколько вспомогательных функции (Функции могут взяты из интернета)
 *
 * 2.Функция, возвращающая случайное число с плавающей точкой из переданного диапазона включительно. Будет использоваться для генерации временных географических координат в следующем задании. Пример использования функции:
 *    1)имя_функции(от, до, количество_знаков_после_запятой); // Результат: число с плавающей точкой из диапазона "от...до" с указанным "количеством знаков после запятой"
 *      1)Учтите, что диапазон может быть только положительный, включая ноль. А также придумайте, как функция должна вести себя, если передать значение «до» меньшее, чем значение «от», или равное ему. Не забудьте, что в случае с дробными числами диапазон может быть в десятых, сотых, тысячных и т. д. долях. Например, 1.1, 1.2 — корректный диапазон.
 *
  */

/**
 * Функция, возвращающая случайное число и возможно округление.
 * https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/random - ссылка на ресурс функции
 * @method  Math.random() - метод возвращения случайного числа
 * @method toFixed() - меетод форматирует число, используя запись с фиксированной запятой.
 * @param {number} min - минимальное число
 * @param {number} max - максимальное число
 * @param {number} digits -  количество цифр после десятичной запятой, если аргумент опущен, он считается равным 0.
 * @constant {number} RANDOM_ARBITARY_NUMBER - константа для получения случайного числа
 * @returns {number} - возращает случайно число в заданном интервале и возможно округление.
 * @returns {string} - описание: диапозон не может быть отрицательным
 */

const getRandomArbitrary = (min, max, digits) => {
  if (min >= 0 && max >= 0) {
    const RANDOM_ARBITARY_NUMBER = (Math.random() * (max - min + 1) + min); //Максимум и минимум включаются
    return RANDOM_ARBITARY_NUMBER.toFixed(digits);
  }

  return('диапазон может быть только положительный, включая ноль.');
};

// аргументы, которые передаются в функции при вызове
getRandomArbitrary(0, 100, 1);

/**
 * Функция с тернарным оператором

const getRandomArbitrary = (min, max, digits) => {
  const RANDOM_ARBITARY_NUMBER = (Math.random() * (max - min + 1) + min); //Максимум и минимум включаются
  return (min >= 0 && max >= 0) ? RANDOM_ARBITARY_NUMBER.toFixed(digits) : ('диапазон может быть только положительный, включая ноль.');
}

getRandomArbitrary(0, 100, 1);
*/
